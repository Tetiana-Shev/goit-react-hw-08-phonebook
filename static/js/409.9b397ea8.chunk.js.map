{"version":3,"file":"static/js/409.9b397ea8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const verificationContact = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (!verificationContact) {\n      resetForm();\n      return dispatch(addContact({ name, number, id: nanoid() }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Rosie Simpson\"\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"459-12-56\"\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <label className={css.label}>\n      Find contact by name\n      <input\n        type=\"name\"\n        value={filter}\n        onChange={onChange}\n        className={css.filter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ContactItem_text__6hT0E\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\n  <>\n    <p className={css.text}>\n      {name}: {number}\n    </p>\n    <button\n      className={css.button}\n      type=\"submit\"\n      onClick={() => onDeleteContact(id)}\n    >\n      Delete\n    </button>\n  </>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"item\":\"ContactList_item__EZYHO\"};","import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <ThreeCircles\n        height=\"40\"\n        width=\"40\"\n        color=\"pink\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filterContacts = useSelector(state => state.filter);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const dispatch = useDispatch();\n\n  const showVisibleContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterContacts.toLowerCase())\n    );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = showVisibleContacts();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    visibleContacts.length > 0 && (\n      <div className={css.contacts}>\n        {isLoading && (\n          <div className={css.loading}>\n            Loading...\n            <Loader />\n          </div>\n        )}\n        <ul className={css.contactsList}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li key={id} className={css.item}>\n              <ContactItem\n                id={id}\n                name={name}\n                number={number}\n                onDeleteContact={onDeleteContact}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"Contacts_phonebook__G9bQK\",\"title\":\"Contacts_title__LxdN4\",\"contacts\":\"Contacts_contacts__gVK0J\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => (\n  <div className={css.phonebook}>\n    <h2 className={css.title}>Phonebook</h2>\n    <ContactForm />\n    <h3 className={css.contacts}>Contacts</h3>\n    <Filter />\n    <ContactList />\n  </div>\n);\n\nexport default Contacts;\n"],"names":["useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","handleChange","e","target","value","resetForm","className","css","onSubmit","preventDefault","find","el","toLowerCase","addContact","id","nanoid","alert","type","pattern","title","required","onChange","placeholder","filter","changeFilter","onDeleteContact","onClick","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","filterContacts","isLoading","useEffect","fetchContacts","visibleContacts","contact","includes","deleteContact","length","map"],"sourceRoot":""}